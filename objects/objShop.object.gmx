<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_set_font(global.MM3font);
draw_set_colour(c_white);
option = 0;

global.items[life].count = global._lives;

cursorCounter = 0;
cursorSprite = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var total_items = array_length_1d(global.items);

cursorCounter++;
if cursorCounter == 10 {
    cursorSprite = 1 - cursorSprite;
    cursorCounter = 0;
}

if global.keyRightPressed {
    option++;
    if option == 5 {
        option = 0;
    }
    else if option == total_items {
        option = 5;
    }
    playSFX(sfxMenuMove);
}
if global.keyDownPressed {
    if option &lt; 5 || option == total_items {
        option += 5;
        if option &gt; total_items {
            option = total_items;
        }
    }
    else {
        option = total_items;
    }
    playSFX(sfxMenuMove);
}
if global.keyLeftPressed {
    option--;
    if option == -1 {
        option = 4;
    }
    else if option == 4 {
        option = total_items - 1;
    }
    playSFX(sfxMenuMove);
}
if global.keyUpPressed {
    if option &gt;= 5 &amp;&amp; option &lt; total_items {
        option -= 5;
    }
    else if option &lt; 5 {
        option = total_items;
    }
    else {
        option = 0;
    }
    playSFX(sfxMenuMove);
}
if option &gt; total_items {
    option = 0;
}
if option &lt; 0 {
    option = total_items;
}

if global.keyShootPressed || global.keyPausePressed {
    if option &lt; total_items {
        show_debug_message("Trying to buy item #" + string(item_index) + " / " + global.items[item_index].name);
        with global.items[item_index] {
            event_user(1);
            if buyok {
                playSFX(sfxMenuSelect);
            }
            else {
                playSFX(sfxError);
            }
        }
    }
    else {
        playSFX(sfxMenuSelect);
        var ID = instance_create(0, 0, objFadeout);
        ID.type = "room";
        ID.myRoom = rmStageSelect;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Items
total_items = array_length_1d(global.items);
currX = 39;
currY = 20;
total = 0;
item_index = -1;
for (var i = 0; i &lt; total_items; i++) {
    if !global.items[i].buyable {
        continue;
    }
    if option == total {
        item_index = total;
    }
    total++;
    if total == 6 {
        currX = 39;
        currY = 50;
    }
    if global.screws &gt;= global.items[i].price &amp;&amp; global.items[i].count &lt; global.items[i].maxUnits {
        draw_sprite(global.items[i].sprite_index, 0, currX + 2, currY);
    }
    else {
        //draw_sprite(global.items[i].sprite_index, 1, currX + 2, currY);
        shader_set(shGrayscale);
        draw_sprite(global.items[i].sprite_index, 0, currX + 2, currY);
        shader_reset();
    }
    draw_text(currX, currY+17, string_replace_all(string_format(global.items[i].price, 3, 0), " ", "0"));
    currX += 40;
}

//Cursor
sX = 1;
sY = 1;
if option &lt; 5 {
    currX = option * 40 + 39 - 3;
    currY = 20 - 1;
}
else if option &lt; total_items{
    currX = (option - 5) * 40 + 39 - 3;
    currY = 50 - 1;
}
else {
    currX = 176 - 4;
    currY = 96 - 3;
    sX = 1.7;
    sY = 0.5;    
}
draw_sprite_ext(sprShopCursor, cursorSprite, currX, currY, sX, sY, 0, c_white, 1);


//Screws
draw_text(66, 95, string_replace_all(string_format(global.screws, 3, 0), " ", "0"));

if option &lt; total_items {
    //Item Name
    draw_text(8, 178, string_upper(global.items[item_index].name) + ": 0" + string(global.items[item_index].count) + " / MAX: 0" + string(global.items[item_index].maxUnits) );
    
    //Item Description
    draw_text_ext(8, 194, string_upper(global.items[item_index].description), 10, 240);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
