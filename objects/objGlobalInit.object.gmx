<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// FOR GLOBAL VALUES THAT NEED TO BE INITIALIZED BEFORE objGLobalControl IS MADE.
// USE ONLY IN rmINIT.

global._maxHealth = cfgMaxHealth;
global.maxAmmo = cfgMaxAmmo;

//Input key variables.
global.enableSlideKey = cfgEnableSlideKey // Do we have an extra key dedicted to sliding?

//Option variables
global.enableDamageNumbers = cfgEnableDamageNumbers; //Show damage numbers.
global.enableCharge = cfgEnableCharge; //Can we charge the buster?
global.enableSlide = cfgEnableSlide; //Can we slide?
global.enableScrews = cfgEnableScrews; //Do screws exist in this game?
global.enableWTanks = cfgEnableWTanks; // Do W-Tanks exist in this game?
global.maxNumberOfBusterShots = cfgMaxNumberOfBusterShots;

// Extra options.    
global.enableEnergyBalancer = false; // Refill weapon with lowest energy when MEGA BUSTER is equipped or the current weapon ammo is full.

//Weapons
global.weapons[megabuster] = instance_create(0,0, objMegaBusterWeapon);
global.weapons[megabuster].unlocked = true; //Mega Buster is always unlocked
global.weapons[silvertomahawk] = instance_create(0,0, objSilverTomahawkWeapon);
global.weapons[windstorm] = instance_create(0,0, objWindStormWeapon);
global.weapons[pharaohshot] = instance_create(0,0, objPharaohShotWeapon);
global.weapons[metalblade] = instance_create(0,0, objMetalBladeWeapon);
global.weapons[starcrash] = instance_create(0,0, objStarCrashWeapon);
global.weapons[centaurflash] = instance_create(0,0, objCentaurFlashWeapon);
global.weapons[rushcoil] = instance_create(0,0, objRushCoilWeapon);
global.weapons[rushjet] = instance_create(0,0, objRushJetWeapon);

//Unlock most weapons for testing
global.weapons[silvertomahawk].unlocked = true;
global.weapons[windstorm].unlocked = true;
global.weapons[metalblade].unlocked = true;
global.weapons[starcrash].unlocked = true;
global.weapons[centaurflash].unlocked = true;
global.weapons[rushcoil].unlocked = true;
global.weapons[rushjet].unlocked = true;

global.weaponSlot[0] = megabuster;
global.weaponSlot[1] = silvertomahawk;
global.weaponSlot[2] = windstorm;
global.weaponSlot[3] = pharaohshot;
global.weaponSlot[4] = metalblade;
global.weaponSlot[5] = starcrash;
global.weaponSlot[6] = centaurflash;
global.weaponSlot[7] = rushcoil;
global.weaponSlot[8] = rushjet;

global.totalWeapons = array_length_1d(global.weapons);
global.weapons_per_col = ceil(global.totalWeapons / 2);

//Boss Names
global.bossNames[0] = "HEAT MAN";
global.bossNames[1] = "BLIZZARD MAN";
global.bossNames[2] = "SPLASH WOMAN";
global.bossNames[3] = "AIR MAN";
global.bossNames[4] = "STRIKE MAN";
global.bossNames[5] = "CONCRETE MAN";
global.bossNames[6] = "SHADOW MAN";
global.bossNames[7] = "PHARAOH MAN";

//Initialize all bosses as undefeated (this is the correct behavior)
for(i = 0; i &lt; 8; i++) {
    global.bossDefeated[i] = false; 
    global.bossRushDefeated[i] = false; 
}

//While there are not other bosses, let's overwrite this for testing
//Comment the following lines when your game has 8 bosses
for(i = 0; i &lt; 8; i++) {
    global.bossDefeated[i] = true;  //All bosses are defeated
    global.bossRushDefeated[i] = true;  //All bosses are defeated
}
global.bossDefeated[7] = false; //We have only Pharaoh Man
global.bossRushDefeated[7] = false; //We have only Pharaoh Man

//Items
//Add all usable items before non-usable ones for correct placement in the pause menu
global.items[life] = instance_create(0,0, objLifeEquip);
global.items[etank] = instance_create(0,0, objETankEquip);
global.items[wtank] = instance_create(0,0, objWTankEquip);
global.items[mtank] = instance_create(0,0, objMTankEquip);
global.items[energybalancer] = instance_create(0,0, objEnergyBalancerEquip);
global.items[guardpowerup] = instance_create(0,0, objGuardPowerUpEquip);
global.items[eddiecall] = instance_create(0,0, objEddieEquip);
global.items[beatcall] = instance_create(0,0, objBeatEquip);
global.items[shockguard] = instance_create(0,0, objShockGuardEquip);

global.damageMultiplier = 1;

global.fortressStarted = false;

global.screen_shader = cfgShader;

global.screen_shaders[0] = noone;
global.screen_shaders[1] = sh256;
global.screen_shaders[2] = sh64;
global.screen_shaders[3] = sh8;
global.screen_shaders[4] = shGB;
global.screen_shaders[5] = shGB2;
global.screen_shaders[6] = shGrayscale;
global.screen_shaders[7] = shBlueish;

global.num_screen_shaders = array_length_1d(global.screen_shaders);
global.current_screen_shader = 0;

global.passPlayVictory = false;
global.lastSave = 0;

global.GP = -1  //Gamepad

if cfgDebug || debug_mode {
    show_debug_overlay(true);
}
    
instance_create(0, 0, objGlobalControl);
instance_destroy();

readTileObjects();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
